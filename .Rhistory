runApp('Downloads/GenderPayGap/app_1.R')
install.packages("gplots")  # Install the gplots package
runApp('Downloads/GenderPayGap/app_1.R')
# library(gplots)  # Load the gplots package
#
# jobs <- c("Industry", "Business",	"Mining",	"Manufacturing", "Electricity_supply",
#           "Water_supply", "Construction", "Retail trade", "Transportation",	"Accommodation",
#           "Information",	"Financial", "Real estate", "Professional_scientific",
#           "Administrative", "Public_administration", "Education", "Human_health",
#           "Arts", "Other")
#
# data_matrix <- matrix(jobs,
#
# heatmap.2(data_matrix)
#
# # heatmap.2(data_matrix, col = heat.colors(10), scale = "row", dendrogram = "both", key = TRUE)
# Example data
data_matrix <- matrix(
c(1, 2, 3, 4, 5, 6, 7, 8, 9),
nrow = 3,
ncol = 3,
byrow = TRUE
)
# Create a heatmap
heatmap(data_matrix)
library(gplots)  # Load the gplots package
jobs <- c("Industry", "Business",	"Mining",	"Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation",	"Accommodation",
"Information",	"Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_matrix <- matrix(jobs, nrow=20, ncol=20)
heatmap(data_matrix)
library(gplots)  # Load the gplots package
data <- read_csv("pay_gap_Europe.csv", show_col_types = FALSE)
library(gplots)  # Load the gplots package
library(dplyr)
library(gplots)  # Load the gplots package
data <- read_csv("pay_gap_Europe.csv", show_col_types = FALSE)
library(readr)
library(gplots)
# Read the data from CSV
data <- read_csv("pay_gap_Europe.csv", show_col_types = FALSE)
pwd
library(readr)
pay_gap_Europe <- read_csv("Downloads/GenderPayGap/pay_gap_Europe.csv")
View(pay_gap_Europe)
library(readr)
library(gplots)
# Read the data from CSV
data <- read_csv("pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- data %>% select(all_of(selected_vars))
library(readr)
library(gplots)
# Read the data from CSV
# data <- read_csv("pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Create a heatmap
heatmap.2(as.matrix(data_subset))
library(readr)
library(gplots)
# Read the data from CSV
# data <- read_csv("pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Create a heatmap
heatmap(as.matrix(data_subset))
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(shiny)
library(readr)
library(gplots)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(shiny)
library(readr)
library(gplots)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(shiny)
library(readr)
library(gplots)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
runApp('Downloads/GenderPayGap/app_1.R')
library(shiny); runApp('Downloads/GenderPayGap/app_1.R')
library(shiny); runApp('Downloads/GenderPayGap/app_1.R')
library(shiny)
ui <- fluidPage(
checkboxGroupInput("myCheckboxes", "Select items:",
choices = c("Item 1", "Item 2", "Item 3", "Item 4"),
selected = c("Item 2", "Item 3")
),
verbatimTextOutput("checkboxValues")
)
server <- function(input, output) {
output$checkboxValues <- renderPrint({
input$myCheckboxes
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
checkboxGroupInput("myCheckboxes", "Select items:",
choices = c("Item 1", "Item 2", "Item 3", "Item 4"),
selected = c("Item 2", "Item 3")
),
verbatimTextOutput("checkboxValues")
)
server <- function(input, output) {
output$checkboxValues <- renderPrint({
input$myCheckboxes
})
}
shinyApp(ui, server)
runApp('Downloads/GenderPayGap/app_2.R')
runApp('Downloads/GenderPayGap/app_2.R')
runApp('Downloads/GenderPayGap/app_2.R')
library(shiny)
library(readr)
library(gplots)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(shiny)
library(readr)
library(gplots)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(shiny)
library(readr)
library(gplots)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Plot the correlation matrix as a heatmap
ggplot(data = melt(cor_matrix), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme_minimal()
library(readr)
library(ggplot2)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(readr)
library(ggplot2)
# Read the data from CSV
# pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
library(readr)
library(ggplot2)
# Read the data from CSV
# pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
library(readr)
library(ggplot2)
# Read the data from CSV
# pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
library(readr)
library(ggplot2)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
library(readr)
library(ggplot2)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
setwd("/Users/jennycheung/Downloads/GenderPayGap")
library(readr)
library(ggplot2)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Plot the correlation matrix as a heatmap
ggplot(data = melt(cor_matrix), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme_minimal()
# library(readr)
# library(ggplot2)
#
# # Read the data from CSV
# pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
#
# # Select the relevant variables for the heatmap
# selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
#                    "Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
#                    "Information", "Financial", "Real estate", "Professional_scientific",
#                    "Administrative", "Public_administration", "Education", "Human_health",
#                    "Arts", "Other")
#
# data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
#
# # Calculate the correlation matrix
# cor_matrix <- cor(data_subset)
#
# # Plot the correlation matrix as a heatmap
# ggplot(data = melt(cor_matrix), aes(x = Var1, y = Var2, fill = value)) +
#   geom_tile() +
#   scale_fill_gradient(low = "blue", high = "red") +
#   labs(x = "", y = "") +
#   theme_minimal()
library(readr)
library(ggplot2)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the correlation map
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Plot the correlation matrix as a heatmap
ggplot(data = melt(cor_matrix), aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme_minimal()
# Plot the correlation matrix as a heatmap
# ggplot(data = melt(cor_matrix), aes(x = Var1, y = Var2, fill = value)) +
ggplot(data = cor_matrix, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "")
install.packages(reshape2)
library(readr)
library(ggplot2)
library(tidyverse)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Plot the correlation matrix as a heatmap
ggplot(data = melt(cor_matrix), aes(x = Var1, y = Var2, fill = value)) +
# ggplot(data = cor_matrix, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "")
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "")
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# library(readr)
# library(ggplot2)
# library(tidyr)
#
# # Read the data from CSV
# pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
#
# # Select the relevant variables for the heatmap
# selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
#                    "Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
#                    "Information", "Financial", "Real estate", "Professional_scientific",
#                    "Administrative", "Public_administration", "Education", "Human_health",
#                    "Arts", "Other")
#
# data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
#
# # Calculate the correlation matrix
# cor_matrix <- cor(data_subset)
#
# # Convert correlation matrix to long format
# data_long <- as.data.frame(cor_matrix) %>%
#   rownames_to_column(var = "Var1") %>%
#   pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
#
# # Plot the correlation matrix as a heatmap
# ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
#   geom_tile() +
#   scale_fill_gradient(low = "blue", high = "red") +
#   labs(x = "", y = "")
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "")
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
theme_minimal()
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
theme_minimal()
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
runApp('app_1.R')
library(shiny)
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
ui <- fluidPage(
titlePanel("Correlation Matrix Heatmap"),
plotOutput("heatmapPlot")
)
server <- function(input, output) {
output$heatmapPlot <- renderPlot({
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
})
}
shinyApp(ui, server)
runApp('Graph2.R')
library(readr)
library(ggplot2)
library(tidyr)
# Read the data from CSV
pay_gap_Europe <- read_csv("./pay_gap_Europe.csv", show_col_types = FALSE)
# Select the relevant variables for the heatmap
selected_vars <- c("Industry", "Business", "Mining", "Manufacturing", "Electricity_supply",
"Water_supply", "Construction", "Retail trade", "Transportation", "Accommodation",
"Information", "Financial", "Real estate", "Professional_scientific",
"Administrative", "Public_administration", "Education", "Human_health",
"Arts", "Other")
data_subset <- pay_gap_Europe %>% select(all_of(selected_vars))
# Calculate the correlation matrix
cor_matrix <- cor(data_subset)
# Convert correlation matrix to long format
data_long <- as.data.frame(cor_matrix) %>%
rownames_to_column(var = "Var1") %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "value")
# Plot the correlation matrix as a heatmap
ggplot(data = data_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
runApp('app_2.R')
